from interactions import (
    SlashCommand, slash_option,
    Extension,
    OptionType, SlashContext,
    Button, ButtonStyle,
    ActionRow, ComponentContext, component_callback,
    Modal, ShortText, listen, modal_callback, ModalContext
)
from services.profile.profile import ProfileService
from services.profile.birthday import BirthdayService, setup_birthday_tasks


class ProfileCog(Extension):
    """–ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    
    Commands:
        /profile show [user]: –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (—Å–≤–æ–π –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        /profile edit: —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
    """

    def __init__(self, bot) -> None:
        self.bot = bot
        self.svc = ProfileService()
        self.birthday_svc = BirthdayService()
        # –•—Ä–∞–Ω–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –¥–ª—è –∫–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª—å
        self._profile_users = {}
        # –•—Ä–∞–Ω–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫—Ä—ã–ª –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        self._modal_users = {}

        self.answers = {
            1:  ("‚úÖ", "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {date}", 0x57F287),
            0:  ("‚ùå", "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç DD.MM", 0xED4245),
            -1: ("‚ùó", "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è", 0xFAA81A),
        }

    def _build_answer(self, code: int, date: str = "") -> str:
        emoji, template, _ = self.answers[code]
        return f"{emoji} {template.format(date=date)}"

    @listen()
    async def on_startup(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞"""
        setup_birthday_tasks(self.bot, self.birthday_svc)

    @listen()
    async def on_message_create(self, event):
        """–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫"""
        try:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–≤
            if event.message.author.bot:
                return
            
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            if event.message.type != 0:  # 0 = DEFAULT (–æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
                return
            
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
            self.svc.db.increment_messages(event.message.author.id)
            
        except Exception as e:
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")

    profile = SlashCommand(
        name="profile",
        description="–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )

    @profile.subcommand(sub_cmd_name="show", sub_cmd_description="–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
    @slash_option(
        name="user",
        description="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å)",
        opt_type=OptionType.USER,
        required=False
    )
    async def show_profile(self, ctx: SlashContext, user=None):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
            target_user = user if user else ctx.author
            target_user_id = target_user.id
            
            user_data = await self.svc.get_user_profile(target_user_id)
            
            if not user_data:
                await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è", ephemeral=True)
                return
            
            embed = self.svc.format_profile_embed(user_data, target_user)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π
            buttons = [
                Button(
                    style=ButtonStyle.SECONDARY,
                    label="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                    custom_id="profile_refresh"
                )
            ]
            action_row = ActionRow(*buttons)
            
            msg = await ctx.send(embed=embed, components=[action_row])
            self._profile_users[msg.id] = target_user_id
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    @profile.subcommand(sub_cmd_name="edit", sub_cmd_description="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    async def edit_profile(self, ctx: SlashContext):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
            user_data = await self.svc.get_user_profile(ctx.author.id)
            
            if not user_data:
                await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è", ephemeral=True)
                return
            
            embed = self.svc.format_profile_embed(user_data, ctx.author)
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            buttons = [
                Button(
                    style=ButtonStyle.PRIMARY,
                    label="üéÇ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
                    custom_id="profile_set_birthday"
                ),
                Button(
                    style=ButtonStyle.SECONDARY,
                    label="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                    custom_id="profile_refresh"
                )
            ]
            
            action_row = ActionRow(*buttons)
            

            msg = await ctx.send(embed=embed, components=[action_row], ephemeral=True)
            self._profile_users[msg.id] = ctx.author.id
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    @component_callback("profile_set_birthday")
    async def set_birthday_callback(self, ctx: ComponentContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            message_id = ctx.message.id if ctx.message else None
            if not message_id:
                await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
                return
                
            user_id = self._profile_users.get(message_id)
            if not user_id:
                await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", ephemeral=True)
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫—É –Ω–∞–∂–∞–ª –≤–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ—Ñ–∏–ª—è
            if ctx.author.id != user_id:
                await ctx.send("‚ùå –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å!", ephemeral=True)
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            self._modal_users[ctx.author.id] = user_id
            
            # –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
            modal = Modal(
                title="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
                custom_id="profile_birthday_modal"
            )
            modal.add_components(
                ShortText(
                    label="–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
                    custom_id="birthday_input",
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM (–Ω–∞–ø—Ä–∏–º–µ—Ä: 15.03)",
                    required=True,
                    max_length=5
                )
            )
            
            await ctx.send_modal(modal)
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    @modal_callback("profile_birthday_modal")
    async def birthday_modal_callback(self, ctx: ModalContext, birthday_input: str):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∞–≤—Ç–æ—Ä–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å)
            user_id = ctx.author.id
            
            # –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–µ—Å–ª–∏ –µ—Å—Ç—å)
            self._modal_users.pop(ctx.author.id, None)
            
            # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é –¥–∞—Ç—É
            birthday_str = birthday_input.strip()
            
            if not birthday_str:
                await ctx.send("‚ùå –î–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π", ephemeral=True)
                return
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
            result = await self.svc.set_birthday(user_id, birthday_str)
            
            if result == 1:
                await ctx.send(self._build_answer(result, birthday_str), ephemeral=True)
            else:
                await ctx.send(self._build_answer(result), ephemeral=True)
                
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    @component_callback("profile_refresh")
    async def refresh_profile_callback(self, ctx: ComponentContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            message_id = ctx.message.id if ctx.message else None
            if not message_id:
                await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —Å–æ–æ–±—â–µ–Ω–∏—è", ephemeral=True)
                return
                
            user_id = self._profile_users.get(message_id)
            if not user_id:
                await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", ephemeral=True)
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            user_data = await self.svc.get_user_profile(user_id)
            
            if not user_data:
                await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è", ephemeral=True)
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            user = await self.bot.fetch_user(user_id)
            if not user:
                await ctx.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", ephemeral=True)
                return
            
            embed = self.svc.format_profile_embed(user_data, user)
            
            # –°–æ–∑–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–∫–∞–∫ –≤ profile show)
            buttons = [
                Button(
                    style=ButtonStyle.SECONDARY,
                    label="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                    custom_id="profile_refresh"
                )
            ]
            
            action_row = ActionRow(*buttons)
            
            await ctx.edit_origin(embed=embed, components=[action_row])
            
        except Exception as e:
            await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)